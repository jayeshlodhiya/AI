
plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.5'
    id 'com.github.sherter.google-java-format' version '0.9'
}

group = 'com.retailai'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

repositories { mavenCentral() }

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'
    implementation 'org.apache.pdfbox:pdfbox:2.0.30'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
   // runtimeOnly 'com.h2database:h2'
    runtimeOnly("com.mysql:mysql-connector-j:8.4.0")
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    implementation 'org.apache.tika:tika-core:2.9.2'    // optional auto-detect
    implementation 'org.apache.tika:tika-parsers-standard-package:2.9.2' // optional
    implementation "org.apache.poi:poi:5.2.5"
    implementation "org.apache.poi:poi-ooxml:5.2.5"
    implementation "com.twelvemonkeys.imageio:imageio-core:3.10.1"
    implementation "com.twelvemonkeys.imageio:imageio-jpeg:3.10.1"
    implementation "com.twelvemonkeys.imageio:imageio-tiff:3.10.1"
    implementation "com.twelvemonkeys.imageio:imageio-bmp:3.10.1"
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    compileOnly 'org.projectlombok:lombok:1.18.32'
  //  annotationProcessor 'org.projectlombok:lombok:1.18.32'
  //  implementation "mysql:mysql-connector-j:8.4.0"   // or latest 8.x
    runtimeOnly "com.mysql:mysql-connector-j:8.4.0"

    // Updated test dependencies for Java 24 compatibility
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mockito:mockito-core:5.10.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.10.0'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.2'
}

tasks.named('test') { 
    useJUnitPlatform()
    
    // Add JVM args for ByteBuddy experimental mode if needed
    jvmArgs '-Dnet.bytebuddy.experimental=true'
}

// Google Java Format configuration
googleJavaFormat {
    toolVersion = '1.17.0'
    options style: 'GOOGLE'
}

// Task to format all Java source files
task formatJava(type: JavaExec) {
    classpath = configurations.compileClasspath
    mainClass = 'com.google.googlejavaformat.java.Main'
    args = ['--replace', '--aosp']
    args += fileTree(dir: 'src', include: '**/*.java').files.collect { it.absolutePath }
}

// Task to check formatting without changing files
task checkFormat(type: JavaExec) {
    classpath = configurations.compileClasspath
    mainClass = 'com.google.googlejavaformat.java.Main'
    args = ['--dry-run']
    args += fileTree(dir: 'src', include: '**/*.java').files.collect { it.absolutePath }
}
